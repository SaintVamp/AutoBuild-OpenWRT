name: OpenWrt_NanoPi_R2S
on:
  repository_dispatch:
  workflow_dispatch:
env:
  BRANCH_NAME: openwrt-22.03

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Init Building Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell mysql* php* mssql-tools msodbcsql17 android*
        sudo -E apt-get update -y
        sudo -E apt-get full-upgrade -y
        sudo -E apt-get install -y build-essential asciidoc binutils bzip2 coreutils gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-8 gcc++-8 gcc-8-multilib g++-8-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python python3 python3-pip python-ply python3-ply haveged lrzsz device-tree-compiler scons antlr3 gperf ecj fastjar re2c xz-utils tar
        for i in $(ls /usr/bin/*-8); do sudo -E ln -sf $i ${i%%-8*}; done
        sudo -E ln -sf /usr/include/asm-generic /usr/include/asm
        sudo -E apt-get autoremove -y --purge
        sudo -E apt-get clean -y
        sudo -E swapoff -a
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android /opt/ghc /swapfile
          
    - name: Server Benchmark
      run: |
        wget -qO- --no-check-certificate https://raw.githubusercontent.com/Kurokosama/serverbench/main/bench.sh | bash


    - name: Clone Source
      run: |
        cd "/home/runner"
        git clone --branch "${BRANCH_NAME}" --single-branch "https://github.com/SaintVamp/openwrt" "openwrt"
        sudo chown -R runner:runner "openwrt"
        cd "/home/runner/openwrt"
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Build OpenWrt
      run: |
        cd "/home/runner/openwrt"
        cp -f "${GITHUB_WORKSPACE}/configs/r2s.config" ".config"
        make defconfig
        make -j$[$(nproc)+1] 

    - name: check packages
      run: |
        cd "/home/runner/openwrt/bin/packages"
        ls 
        echo "------------------"
        cd "/home/runner/openwrt/bin/targets"
        ls 
        echo "=================="

    - name: Moving Files
      run: |
        cd "/home/runner/openwrt"
        ls bin/targets/rockchip/armv8/
        cp -f "bin/targets/rockchip/armv8/openwrt-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz" "../${BRANCH_NAME}-SV-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz"
        cp -f "bin/targets/rockchip/armv8/openwrt-rockchip-armv8-friendlyarm_nanopi-r2s-squashfs-sysupgrade.img.gz" "../${BRANCH_NAME}-SV-rockchip-armv8-friendlyarm_nanopi-r2s-squashfs-sysupgrade.img.gz"
        ls

    - name: Prepare Release Zip File
      id: assemble_artifact
      run: |
        cd "/home/runner"
        ls
        release_tag="R2S-$(date +%Y-%m-%d-%H-%M-%S)"
        zip OpenWrt-$release_tag.zip ${BRANCH_NAME}-SV-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz ${BRANCH_NAME}-SV-rockchip-armv8-friendlyarm_nanopi-r2s-squashfs-sysupgrade.img.gz
        
        echo "release_tag=$release_tag" >> $GITHUB_ENV

    - name : Upload Artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt(Download This or Go to Release Page)
        path: /home/runner/OpenWrt-${{ env.release_tag }}.zip
        
    - name: Prepare artifact
      run: |
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

    - name: Upload buildinfo
      uses: actions/upload-artifact@v3
      with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

    - name: Upload package
      uses: actions/upload-artifact@v3
      with:
          name: OpenWrt_package
          path: ./artifact/package/

    - name: Upload firmware
      uses: actions/upload-artifact@v3
      with:
          name: OpenWrt_firmware
          path: ./bin/targets/
