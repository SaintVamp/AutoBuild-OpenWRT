name: OpenWrt_test_R2S
on:
#  schedule:
#    - cron: "0 17 * * *"
  workflow_dispatch:
  push:
    branches:
      - master
env:
  BRANCH_NAME: openwrt-22.03

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Init Building Dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q)
          sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell mysql* php* mssql-tools msodbcsql17 android*
          sudo -E apt-get update -y
          sudo -E apt-get full-upgrade -y
          sudo -E apt-get install -y build-essential asciidoc binutils bzip2 coreutils gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-8 gcc++-8 gcc-8-multilib g++-8-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python python3 python3-pip python-ply python3-ply haveged lrzsz device-tree-compiler scons antlr3 gperf ecj fastjar re2c xz-utils tar
          for i in $(ls /usr/bin/*-8); do sudo -E ln -sf $i ${i%%-8*}; done
          sudo -E ln -sf /usr/include/asm-generic /usr/include/asm
          sudo -E apt-get autoremove -y --purge
          sudo -E apt-get clean -y
          sudo -E swapoff -a
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android /opt/ghc /swapfile

      - name: Server Benchmark
        run: |
          whoami
          cd /home
          ls -ls
          cd /home/linuxbrew
          ls -ls
          sudo du -h --max-depth=0
          echo "-------------------"
          cd /home/runner
          ls -ls
          sudo du -h --max-depth=0
          echo "-------------------"
          cd /home/runneradmin
          ls -ls
          sudo du -h --max-depth=0
          echo "-------------------"
          cd /imagegeneration
          ls -ls
          sudo du -h --max-depth=0
          echo "+++++++++++++++++++"
          cd /mnt
          ls -ls
          sudo du -h --max-depth=0
          echo "-------------------"
          cd /opt
          ls -ls
          sudo du -h --max-depth=0
          echo "+++++++++++++++++++"
          cd /usr
          ls -ls
          sudo du -h --max-depth=0
          echo "-------------------"


      - name: Server Benchmark
        run: |
          wget -qO- --no-check-certificate https://raw.githubusercontent.com/Kurokosama/serverbench/main/bench.sh | bash
